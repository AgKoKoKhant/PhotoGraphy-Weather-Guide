<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Photography Weather Guide</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 text-gray-900 flex justify-center items-center min-h-screen">

    <!-- Main Container -->
    <div class="w-full max-w-3xl mx-auto bg-white shadow-lg rounded-lg p-6">
        
        <!-- Header -->
        <h1 class="text-3xl font-bold text-center mb-6">üì∏ Is It a Good Day for Photography?</h1>

        <!-- Single Input for City -->
        <form id="searchForm" class="flex flex-col items-center space-y-4">
            <input 
                type="text" 
                id="city" 
                name="city" 
                placeholder="Enter city..." 
                required 
                class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500"
            >
            <button type="submit" class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition">
                Check Weather & Find Places
            </button>
        </form>

        <!-- Show validation error -->
        <p id="input-error" class="text-red-600 text-center mt-2"></p>

        <!-- Weather Display -->
        <div id="weather-container"></div>

        <!-- üìç Display Photography Spots -->
        <div id="places-container" class="mt-6"></div>

    </div>

    <script>
        document.getElementById("searchForm").addEventListener("submit", async function(event) {
            event.preventDefault();
            const city = document.getElementById("city").value.trim();
            const errorText = document.getElementById("input-error");
            const weatherContainer = document.getElementById("weather-container");
            const placesContainer = document.getElementById("places-container");

            // 1Ô∏è‚É£ Validate Input
            if (city === "") {
                errorText.textContent = "‚ö†Ô∏è Please enter a valid city name.";
                return;
            }
            errorText.textContent = ""; // Clear error

             // 2Ô∏è‚É£ Fetch Weather & Photography Places
             try {
                const response = await fetch("/search", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ city })
                });

                const data = await response.json();

                if (data.error) {
                    errorText.textContent = data.error;
                    return;
                }


            // 3Ô∏è‚É£ Update Weather Info
            weatherContainer.innerHTML = `
                    <h2 class="text-xl font-semibold">Weather in ${data.weather.name}: ${data.weather.weather[0].main}</h2>
                    <p class="text-lg mt-2">üå°Ô∏è Temperature: ${data.weather.main.temp}¬∞C</p>
                    <p class="text-lg mt-2">üì∑ Recommendation: ${data.recommendation}</p>
                `;

                // 4Ô∏è‚É£ Update Photography Spots
                if (data.places.length > 0) {
                    placesContainer.innerHTML = "<h2 class='text-2xl font-semibold text-center mt-6'>üì∑ Photography Spots:</h2>";
                    data.places.forEach(place => {
                        placesContainer.innerHTML += `
                            <div class="p-4 bg-gray-200 rounded-lg mt-4">
                                <strong class="text-lg">${place.name}</strong>
                                <p class="text-gray-600">üìç ${place.address}</p>
                                <p class="text-yellow-500">‚≠ê Rating: ${place.rating}</p>
                                <button onclick="fetchPhotos('${place.id}', '${place.name}')" class="mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition">
                                    View Photos
                                </button>
                                <div id="photos-${place.id}" class="mt-4"></div>
                            </div>
                        `;
                    });
                } else {
                    placesContainer.innerHTML = "<p class='text-gray-600 text-center mt-4'>No places found. Try another city.</p>";
                }

            } catch (error) {
                console.error("Error:", error);
                errorText.textContent = "‚ö†Ô∏è Failed to fetch data. Try again later.";
            }
        });

            // Fetch Photos for a Selected Place
        async function fetchPhotos(placeId, name) {
            const response = await fetch(`/place-details/${placeId}?name=${encodeURIComponent(name)}`);
            const data = await response.json();
            const photosContainer = document.getElementById(`photos-${placeId}`);
            photosContainer.innerHTML = data.photos.length > 0 
                ? data.photos.map(photo => `<img src="${photo}" class="w-48 h-32 object-cover rounded-lg shadow-md">`).join('') 
                : "<p class='text-center text-gray-600'>No photos available.</p>";
        }
    </script>

</body>
</html>
